Hi, welcome to this lesson on natural language queries in Oracle Autonomous Database. My name is Michelle Malcher. I'm a director and database product management. And I'm excited to show you how to use Select AI in Oracle databases. We will look at using natural language to analyze your data. But before we dive in, we want to look at where we are in the Oracle AI landscape.

We have been discussing AI and large language models in other lessons. Oracle provides AI to the enterprise at every layer. The layer in this lesson looks at data and how we can leverage the Oracle Autonomous Database with large language models to analyze our data and return results through SQL queries just by asking and using natural language. We are going to tackle a couple of areas in this lesson, discover what Select AI is in an Oracle Autonomous Database, demonstrate how easy it is to query your data using natural language, and then tie it all together by looking at the SQL query generation process flow.

Autonomous Database Select AI makes it easy to get answers about your business using language. And you don't need to know the structure of the data or how to query the data to gain the insights of your data. Just ask your questions. Autonomous Database will then manage the entire query process to get that answer. This includes connecting to a large learning model, engineering a prompt that's optimized for Oracle Database sources, and delivering the app, a result set, a narrative, or just the SQL.

We are going to illustrate how you can build this into an app on Autonomous Database that uses your data because, remember, those models know nothing about the data within your organization. The language models are trained on public data. We'll use natural language and AI to query your data, summarize content, and generate innovative responses. Unleash the creativity of generative AI on your data to develop new solutions.

Here is a simple demo app built with Autonomous Database using APEX. We can ask our simple natural language query and get results from the database. It returns the 10 streamed-- top 10 streamed movies. We can ask additional questions about actors that are in those movies. Let's ask one more question. Let's get the total number of movies streamed, and then we can explore this detail using an APEX interactive report.

Now we use Select AI because we use the natural language to generate and get the result sets. But here, we're using a feature of APEX to be able to work with the data and see the different filters we have, and being able to also look at it as a chart and pull back that information and see it in a different format. It's quick and easy to use. And we didn't even have to know the table names or the columns that we were looking for. Now let's show the SQL plan, where we can actually see the SQL that was generated with Select AI show SQL. And we see the tables and the joins that are part of the statement that have returned that result set.

Since we are demonstrating the app we created an APEX, you can also simply take it on the move. The same Select AI capabilities used the large language models to return the result sets or the SQL query about your data. As you can see from the questions that were being asked, Select AI takes the question in natural language and translates into SQL language. Using AI large language models, it breaks up the question, infers the details being asked, and formulates the SQL query.

Large language models are different, and there are models better at writing SQL by inferring intent and being loaded with the information about the objects in the database. Now you can review the query to verify the results. Developing apps with Select AI is simple. So you can use generative AI capabilities with existing applications and build new. It is future enabled because you can choose from an array of large language models and pick the best suited for your business.

There are also new models being trained. And you can even leverage models that you have fine tuned. Using Oracle Database, the security protects your data. Using Autonomous Select AI with OCI Generative AI, your data stays in the tenancy and not sent to another LLM provider or seen by other customers. Let's take a quick look under the covers to see how this works and how simple it is to query the database with natural language. Using a tool like SQL Developer to query the database, you see the statements that run against the database.

It is a standard SELECT statement followed by AI, and then your question. Instead of the from and where clause, it processes the Select AI statement just like other SQL statements. You can also use the command select AI showsql, and you will see the query that is created to return the results. You can keep refining your questions to get more details or other answers that you need from the data. One of the major design principles for Select AI is pluggability. And this is encapsulated in an AI profile.

Depending on your use case, you may want to use OCI Generative AI, Cohere, or OpenAI models, or even Llama. You can choose which provider and model to use. Then you specify schemas and tables, or views, to participate in the process. To configure the database, you can use one or more AI profiles with a large language model that best fits with your business. Specific schemas, tables, and/or views are to be included in the processing. Use dbms_cloud_ai PL/SQL package that is provided in the database.

To wrap up, let's put it all together. To generate SQL query, you can simply ask your database using Select AI. Find the top customer segments for George Clooney movies. The AI profile uses the large language models defined within the database metadata to produce the prompt from the question asked, and generates the SQL using the model and returns the result sets or SQL to a SQL tool, such as SQL Developer, or to an app. We have shown you how easy it is to build AI into your apps and use Oracle Autonomous Database with Select AI to get answers from your data using large language models.

This is secure at every layer to protect your data, and future enabled to use new available models or fine tune models that meet your business needs. I hope you enjoyed this lesson on Select AI and are looking forward to building AI-powered apps with the Oracle Database.